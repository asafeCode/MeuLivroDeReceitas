name: Build With SonarCloud

on:
  push:
    branches:
      - develop
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build and analyze
    runs-on: windows-latest

    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache SonarQube Cloud packages
        uses: actions/cache@v4
        with:
          path: .\.sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarQube Cloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarQube Cloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner

      - name: Restore dependencies
        run: dotnet restore

      - name: Begin SonarCloud analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: .\.sonar\scanner\dotnet-sonarscanner begin `
          /k:"asafeCode_MeuLivroDeReceitas" `
          /o:"matheusasafe" `
          /d:sonar.token="${{ secrets.SONAR_TOKEN }}" `
          /d:sonar.cs.opencover.reportsPaths="tests/**/TestResults/**/coverage.cobertura.xml" `
          /d:sonar.newCode.referenceBranch=develop

      - name: Build solution
        run: dotnet build --configuration Release --no-restore

      - name: Run tests and collect code coverage
        run: |
          dotnet test tests/WebApi.Test /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura
          dotnet test tests/UseCases.Test /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura
          dotnet test tests/Validators.Test /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura

      - name: Debug - List all coverage reports
        shell: cmd
        run: dir /s /b tests\*Test\*\TestResults\coverage.cobertura.xml

      - name: End SonarCloud analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"




